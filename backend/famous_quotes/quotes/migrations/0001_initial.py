# Generated by Django 3.2 on 2023-02-06 20:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('quote', models.TextField(max_length=5000)),
                ('author', models.CharField(max_length=300)),
                ('context', models.TextField(blank=True, max_length=1000, null=True)),
                ('total_upvotes', models.IntegerField(default=0)),
                ('total_downvotes', models.IntegerField(default=0)),
                ('net_votes', models.IntegerField(default=0)),
                ('popularity', models.FloatField(default=0.5)),
                ('duplicate_votes', models.IntegerField(default=0)),
                ('misattribution_votes', models.IntegerField(default=0)),
                ('misattribution_resolved', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(to='quotes.Category')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-popularity', '-total_upvotes'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.IntegerField()),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.quote')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_username', models.CharField(blank=True, max_length=100, null=True)),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('password_reset_code', models.CharField(blank=True, max_length=64, null=True)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuoteOfTheDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quotes.category')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.quote')),
            ],
        ),
        migrations.CreateModel(
            name='QuoteList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('external_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('quotes', models.ManyToManyField(to='quotes.Quote')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('reply', models.TextField(blank=True, null=True)),
                ('quote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quotes.quote')),
                ('user_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quotes.usersession')),
            ],
        ),
        migrations.CreateModel(
            name='Analytic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(max_length=100, null=True)),
                ('action', models.JSONField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['user'], name='quotes_vote_user_id_88c2e3_idx'),
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['quote'], name='quotes_vote_quote_i_99cb97_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['session_key'], name='quotes_user_session_d4dab7_idx'),
        ),
        migrations.AddIndex(
            model_name='quoteoftheday',
            index=models.Index(fields=['date'], name='quotes_quot_date_e7672a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='quoteoftheday',
            unique_together={('category', 'date')},
        ),
        migrations.AddIndex(
            model_name='quotelist',
            index=models.Index(fields=['user'], name='quotes_quot_user_id_12faeb_idx'),
        ),
        migrations.AddIndex(
            model_name='quote',
            index=models.Index(fields=['author'], name='quotes_quot_author_f3e776_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user_session', 'quote'], name='quotes_comm_user_se_b1caa2_idx'),
        ),
        migrations.AddIndex(
            model_name='analytic',
            index=models.Index(fields=['session_id'], name='quotes_anal_session_e03915_idx'),
        ),
    ]
